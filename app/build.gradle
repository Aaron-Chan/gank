apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        //指定名叫release的一个签名对象 会在下面的脚本(85行开始)中，动态根据配置文件设置属性
        release
    }

    buildTypes {
        release {
            println 'build - release'

            minifyEnabled true //设置是否混淆
            zipAlignEnabled true  //设置压缩对齐
            //移除无用的资源文件
            shrinkResources true
            //设置混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //如果签名配置不为空 则设置签名信息
            if (signingConfigs.release != null) {
                signingConfig signingConfigs.release
            }
            //指定签名包得输入文件名称
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为Gank_v1.0_2017-01-14_wandoujia.apk
                        def fileName = "Gank_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}_release.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }

    productFlavors {
        xiaomi {
            manifestPlaceholders = [ChannelValue: "xiaomi"]
        }
        yingyongbao {
            manifestPlaceholders = [ChannelValue: "yingyongbao"]
        }
        m360 {
            manifestPlaceholders = [ChannelValue: "m360"]
        }
        wandoujia {
            manifestPlaceholders = [ChannelValue: "wandoujia"]
        }
        fir {
            manifestPlaceholders = [ChannelValue: "fir"]
        }
        play {
            manifestPlaceholders = [ChannelValue: "play"]
        }
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

//set release sign info synchronously
def Properties props = new Properties()
def propFile = file('../gradle.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    if (props != null &&
            props.containsKey('SIGN_FILE') && props.containsKey('SIGN_KEYSTORE_PASS') &&
            props.containsKey('SIGN_KEYSTORE_ALIAS') && props.containsKey('SIGN_KEYSTORE_ALIAS_PASS')) {
        println 'release build signing'
        android.signingConfigs.release.storeFile = file(props['SIGN_FILE'])
        android.signingConfigs.release.storePassword = props['SIGN_KEYSTORE_PASS']
        android.signingConfigs.release.keyAlias = props['SIGN_KEYSTORE_ALIAS']
        android.signingConfigs.release.keyPassword = props['SIGN_KEYSTORE_ALIAS_PASS']
    } else {
        println 'release build not found signing properties'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'release build not found signing file'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile(project(':library')) {
        exclude group: 'com.squareup.leakcanary' // 避免 duplicate entry
    }

    //butterknife
    compile rootProject.ext.dependencies["butterknife"]

    //retrofit
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["retrofit-covert-gson"]
    compile rootProject.ext.dependencies["retrofit-rxjava"]

    //gson
    compile rootProject.ext.dependencies["gson"]

    //兼容包
    // compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["support-v4"]
    // compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["cardview"]

    // google扩展库
    compile rootProject.ext.dependencies["guava"]

    // 内存泄漏检查
    debugCompile rootProject.ext.dependencies["leakcanaryDebug"]
    releaseCompile rootProject.ext.dependencies["leakcanaryRelease"]
    testCompile rootProject.ext.dependencies["leakcanaryTest"]

    // umeng related dependencies
    compile 'com.squareup.okio:okio:1.6.0'
    compile 'com.squareup.wire:wire-runtime:2.1.2'

    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
}
